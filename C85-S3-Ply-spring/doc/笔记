Spring IOC( 控制反转 )

Spring 大管家负责创建和管理对象
1.对象池方式管理bean;
2.同(DI 依赖注入)配置bean

使用步骤:
1. 配置 pom.xml ==> spring-context 依赖 (bean core aop ...)
2. 配置 spring 的配置文件 : xml 和 注解
3. 业务开发

注入方式:
1. setter 注入 (常用)
2. 构造方法注入
3. 接口注入  (SpringMVC 大量使用)

bean 高级的特性和生命周期配置


Spring IOC 
XML配置				注解配置
beans.xml			BeanConfig.java + @Configuration
<bean>				@Bean
<init-lazy="true">	@Lazy
<primary="true">	@Primary
<init-method="">	@Bean(initMethod="")
<property>			Java 代码  ==> setXXXX

autowire			


注解实现自动装配( 配置业务模块之间的依赖注入 )
	xxxBiz ==> xxxDao
	class xxxBiz {
		private xxxDao xDao; // 实现自动的注入
	}

组件注解: 直接在业务类上定义的注解, 作用是替代 @Bean
@Component		通用的组件注解
@Controller		控制器组件注解 ==> 相对于 Servlet
@Service		服务类组件注解 ==> xxxBiz, xxxService ...
@Repository		Dao类组件注解 ==> xxxDao, xxxMapper ...

在配置类上加上组件扫描注解

	<div>  层
	html5  <header><footer> .... 结构语义性


AOP












